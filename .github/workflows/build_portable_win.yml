name: Win Package

on:
  workflow_dispatch:
    inputs:
      #java_version:
      #  description: "The version of Java to use for jpackage"
      #  required: true
      app_version:
        description: "应用版本，如1.0.1"
        required: true
      release_notes:
        description: "Release描述"
        required: false
jobs:
  win_release:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3  # 检出当前仓库代码

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
           python-version: '3.x'  # 根据项目实际依赖的Python版本进行调整


      - name: Use site-packages variable
        run: |
          echo "The site-packages path is: ${{ env.Python_ROOT_DIR }}"
          
      - name: Install dependencies
        run: pip install -r requirements.txt  # 安装项目依赖的Python库

      - name: Install PyInstaller
        run: pip install pyinstaller  # 安装PyInstaller打包工具

      - name: Build application with PyInstaller
        run: pyinstaller --name "FS-Tool" --onedir --window --add-data "${{ env.Python_ROOT_DIR }}\lib\site-packages\PyQt5\Qt5\bin;./PyQt5/Qt/bin" --add-data "${{ env.Python_ROOT_DIR }}\lib\site-packages\PyQt5\Qt5\plugins;./PyQt5/Qt/plugins" --add-data "resources;resources" --add-data "config.json;."  --collect-all PyQt5 --icon=resources/app.ico app.py
        #working-directory: ${{ github.repository }}  # 设置工作目录为仓库根目录
      - name: Zip the generated files (Windows)
        run: Compress-Archive -Path dist/* -DestinationPath FS-Tool.zip  # 将生成文件压缩为zip包

      - name: Create release
        uses: actions/create-release@v1
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # 使用GitHub自动生成的token用于创建发布
        with:
          #tag_name: ${{ github.ref }}
          #name: Release ${{ github.ref }}
          tag_name: v${{ inputs.app_version }}
          name: Release v${{ inputs.app_version }}
          draft: false  # 是否为草稿，设为false表示直接发布
          prerelease: false  # 是否为预发布版本，设为false表示正式发布

      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}  # 获取创建发布时的上传链接
          asset_path: FS-Tool.zip
          asset_name: FS-Tool-Portable.zip
          asset_content_type: application/zip
